// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using jobPortal.Data;

#nullable disable

namespace jobPortal.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("jobPortal.Entities.AppliedJob", b =>
                {
                    b.Property<int>("appliedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("candidateID")
                        .HasColumnType("int");

                    b.Property<int>("jobId")
                        .HasColumnType("int");

                    b.HasKey("appliedId");

                    b.ToTable("appliedJob");
                });

            modelBuilder.Entity("jobPortal.Entities.Candidate", b =>
                {
                    b.Property<int>("candidateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("candidateContact")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("candidateEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("candidateName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("candidateQualification")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("candidateResume")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("candidateId");

                    b.ToTable("candidate");
                });

            modelBuilder.Entity("jobPortal.Entities.Company", b =>
                {
                    b.Property<int>("companyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("companyDetails")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("companyLogo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("companyName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("companyId");

                    b.ToTable("company");
                });

            modelBuilder.Entity("jobPortal.Entities.Job", b =>
                {
                    b.Property<int>("jobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("jobDescription")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("jobLocation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("jobTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("postDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("jobId");

                    b.ToTable("job");
                });
#pragma warning restore 612, 618
        }
    }
}
